install_docker_client: &install_docker_client
  run:
    name: Install Docker client
    command: |
      set -x
      VER="17.03.0-ce"
      curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
      tar -xz -C /tmp -f /tmp/docker-$VER.tgz
      mv /tmp/docker/* /usr/bin

restore_cache: &restore_cache
  restore_cache:
    keys:
      - dependency-cache-{{ .Revision }} 


version: 2
jobs:
  build_image:
    docker:
      - image: buildpack-deps:trusty
    steps:
      - checkout
      - *restore_cache
      - setup_remote_docker
      - *install_docker_client
      - run:  make build-image
    working_directory: /go/src/github.com/vidsy/go-kmsconfig

  check_for_clubhouse_ticket_comment:
    docker:
      - image: vidsyhq/cli:latest
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    steps:
      - run: cli github check-comment --url=$CIRCLE_PULL_REQUEST --token=$VIDSY_BOT_GITHUB_TOKEN --text-contains=https://app.clubhouse.io/vidsy/story

  check_version:
    docker:
      - image: vidsyhq/go-builder:latest
    steps:
      - checkout
      - run: make check-version
    working_directory: /go/src/github.com/vidsy/go-kmsconfig

  deploy:
    docker:
      - image: buildpack-deps:trusty
    steps:
      - checkout
      - *restore_cache
      - setup_remote_docker
      - *install_docker_client
      - run: make build-image
      - deploy:
          name: deploy
          command: make push-to-registry
    working_directory: /go/src/github.com/vidsy/go-kmsconfig

  install_and_build:
    docker:
      - image: vidsyhq/go-builder:latest
    steps:
      - checkout
      - *restore_cache
      - run: BUILD=true /scripts/build.sh
      - save_cache:
          key: dependency-cache-{{ .Revision }}
          paths:
            - vendor
            - go-kmsconfig
    working_directory: /go/src/github.com/vidsy/go-kmsconfig

  release:
    docker:
      - image: vidsyhq/go-builder:latest
    steps:
      - checkout
      - run: apk update && apk add ca-certificates make
      - *restore_cache
      - run: make release -e VIDSY_GOBOT_GITHUB_TOKEN=${VIDSY_GOBOT_GITHUB_TOKEN}
    working_directory: /go/src/github.com/vidsy/go-kmsconfig

  test:
    docker:
      - image: vidsyhq/go-builder:latest
    steps:
      - checkout
      - *restore_cache
      - run: make test
    working_directory: /go/src/github.com/vidsy/go-kmsconfig

  vet:
    docker:
      - image: vidsyhq/go-builder:latest
    steps:
      - checkout
      - *restore_cache
      - run: make vet
    working_directory: /go/src/github.com/vidsy/go-kmsconfig

workflows:
  version: 2
  install_test:
    jobs:
      - build_image:
          requires:
            - install_and_build
          filters:
            tags:
              only: /[0-9]+\.[0-9]+\.[0-9]+/
            branches:
              ignore: master

      - check_for_clubhouse_ticket_comment:
          context: org-github-docker-hub
          filters:
            branches:
              ignore: master
      
      - check_version:
          filters:
            branches:
              ignore: master

      - deploy:
          context: org-docker-hub
          requires:
            - install_and_build
            - build_image
            - test
            - check_version
            - vet
          filters:
            tags:
              only:
                - /[0-9]+\.[0-9]+\.[0-9]+/
            branches:
              ignore: /.*/

      - install_and_build:
          filters:
            tags:
              only: /[0-9]+\.[0-9]+\.[0-9]+/
            branches:
              ignore: master

      - release:
          context: org-go-services
          requires:
            - install_and_build
            - test
            - check_version
            - vet
          filters:
            tags:
              only:
                - /[0-9]+\.[0-9]+\.[0-9]+/
            branches:
              ignore: /.*/

      - test:
          requires:
            - install_and_build
          filters:
            tags:
              only: /[0-9]+\.[0-9]+\.[0-9]+/
            branches:
              ignore: master

      - vet:
          requires:
            - install_and_build
          filters:
            tags:
              only: /[0-9]+\.[0-9]+\.[0-9]+/
            branches:
              ignore: master
